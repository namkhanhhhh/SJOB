@model SJOB_EXE201.ViewModels.CreditTransactionListViewModel
@{
    ViewData["Title"] = "Credit Transactions";
    Layout = "_AdminLayout";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Credit Transactions</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Admin">Dashboard</a></li>
        <li class="breadcrumb-item active">Credit Transactions</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-filter me-1"></i>
            Filter Transactions
        </div>
        <div class="card-body">
            <form method="get" action="/CreditTransaction/Index" id="filterForm">
                <div class="row mb-3">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="searchEmail">User Email</label>
                            <input type="text" class="form-control" id="searchEmail" name="searchEmail" value="@Model.SearchEmail" placeholder="Search by email">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="fromDate">From Date</label>
                            <input type="date" class="form-control" id="fromDate" name="fromDate" value="@Model.FromDate?.ToString("yyyy-MM-dd")">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="toDate">To Date</label>
                            <input type="date" class="form-control" id="toDate" name="toDate" value="@Model.ToDate?.ToString("yyyy-MM-dd")">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="transactionType">Transaction Type</label>
                            <select class="form-control" id="transactionType" name="transactionType">
                                <option value="">All Types</option>
                                @foreach (var type in Model.TransactionTypes)
                                {
                                    <option value="@type" selected="@(Model.TransactionType == type)">@type</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="minAmount">Min Amount</label>
                            <input type="number" class="form-control" id="minAmount" name="minAmount" value="@Model.MinAmount" placeholder="Min amount">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="maxAmount">Max Amount</label>
                            <input type="number" class="form-control" id="maxAmount" name="maxAmount" value="@Model.MaxAmount" placeholder="Max amount">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="sortBy">Sort By</label>
                            <select class="form-control" id="sortBy" name="sortBy">
                                <option value="Date" selected="@(Model.SortBy == "Date")">Date</option>
                                <option value="Amount" selected="@(Model.SortBy == "Amount")">Amount</option>
                                <option value="User" selected="@(Model.SortBy == "User")">User</option>
                                <option value="Type" selected="@(Model.SortBy == "Type")">Type</option>
                                <option value="Balance" selected="@(Model.SortBy == "Balance")">Balance</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="sortOrder">Sort Order</label>
                            <select class="form-control" id="sortOrder" name="sortOrder">
                                <option value="desc" selected="@(Model.SortOrder == "desc")">Descending</option>
                                <option value="asc" selected="@(Model.SortOrder == "asc")">Ascending</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <button type="submit" class="btn btn-primary">Apply Filters</button>
                        <a href="/CreditTransaction/Index" class="btn btn-secondary">Reset</a>
                    </div>
                    <div class="col-md-6 text-end">
                        <a href="/CreditTransaction/ExportTransactions?searchEmail=@Model.SearchEmail&fromDate=@(Model.FromDate?.ToString("yyyy-MM-dd"))&toDate=@(Model.ToDate?.ToString("yyyy-MM-dd"))&minAmount=@Model.MinAmount&maxAmount=@Model.MaxAmount&transactionType=@Model.TransactionType" class="btn btn-success">
                            <i class="fas fa-file-csv me-1"></i> Export to CSV
                        </a>
                        <a href="/CreditTransaction/Dashboard" class="btn btn-info">
                            <i class="fas fa-chart-line me-1"></i> Analytics Dashboard
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6">
                    <i class="fas fa-table me-1"></i>
                    Credit Transactions
                </div>
                <div class="col-md-6 text-end">
                    <span class="badge bg-primary">Total: @Model.TotalTransactions</span>
                    <span class="badge bg-success">Amount: @Model.TotalAmount.ToString("C")</span>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="transactionsTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>User</th>
                            <th>Amount</th>
                            <th>Type</th>
                            <th>Balance After</th>
                            <th>Description</th>
                            <th>Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Model.Transactions)
                        {
                            <tr>
                                <td>@transaction.Id</td>
                                <td>@transaction.User.Username (@transaction.User.Email)</td>
                                <td class="@(transaction.TransactionType == "Topup" ? "text-success" : "text-danger")">
                                    @(transaction.TransactionType == "Topup" ? "+" : "-")@transaction.Amount.ToString("C")
                                </td>
                                <td>
                                    <span class="badge @(transaction.TransactionType == "Topup" ? "bg-success" : "bg-primary")">
                                        @transaction.TransactionType
                                    </span>
                                </td>
                                <td>@transaction.BalanceAfter.ToString("C")</td>
                                <td>@transaction.Description</td>
                                <td>@(transaction.CreatedAt.HasValue ? transaction.CreatedAt.Value.ToString("yyyy-MM-dd HH:mm") : "N/A")</td>
                                <td>
                                    <a href="/CreditTransaction/Details/@transaction.Id" class="btn btn-sm btn-info">
                                        <i class="fas fa-info-circle"></i> Details
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="javascript:void(0);" onclick="navigateToPage(@(Model.CurrentPage - 1))">Previous</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">Previous</span>
                            </li>
                        }

                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="javascript:void(0);" onclick="navigateToPage(@i)">@i</a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="javascript:void(0);" onclick="navigateToPage(@(Model.CurrentPage + 1))">Next</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">Next</span>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function navigateToPage(page) {
            // Get current form values
            const form = document.getElementById('filterForm');
            const formData = new FormData(form);
            
            // Update page number
            formData.set('page', page);
            
            // Build query string
            const params = new URLSearchParams();
            for (const [key, value] of formData.entries()) {
                if (value) {
                    params.append(key, value);
                }
            }
            
            // Navigate to the new URL
            window.location.href = `/CreditTransaction/Index?${params.toString()}`;
        }
    </script>
}

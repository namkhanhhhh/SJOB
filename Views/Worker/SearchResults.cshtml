@model SJOB_EXE201.ViewModels.SearchResultsViewModel
@{
    ViewData["Title"] = "Search Results";
    Layout = "_WorkerLayout";
}

<div class="container my-5">
    <!-- Page Header -->
    <h1 class="section-title mb-3">Search Results</h1>
    <p class="lead mb-4">
        @if (!string.IsNullOrWhiteSpace(Model.Keyword))
        {
            <span>Found <strong>@Model.TotalJobs</strong> jobs matching "<strong>@Model.Keyword</strong>"</span>
        }
        else
        {
            <span>Found <strong>@Model.TotalJobs</strong> jobs matching your search criteria</span>
        }
    </p>

    <!-- Search Box - Top Right -->
    <div class="row mb-4">
        <div class="col-md-8">
            @if (Model.SuggestedKeywords.Any())
            {
                <div class="filter-tags mb-4">
                    <span class="filter-label me-2">Filter by:</span>
                    <div class="d-inline-flex flex-wrap gap-2">
                        @foreach (var filter in Model.SuggestedKeywords)
                        {
                            <a href="@Url.Action("SearchResults", "Worker", new { keyword = filter })" 
                               class="badge rounded-pill bg-light text-dark border px-3 py-2 text-decoration-none">
                                @filter
                            </a>
                        }
                    </div>
                </div>
            }
        </div>
        <div class="col-md-4">
            <div class="search-box">
                <form asp-controller="Worker" asp-action="SearchResults" method="get" class="d-flex">
                    <input type="text" class="form-control" name="keyword" value="@Model.Keyword" placeholder="Search jobs...">
                    <button class="btn btn-primary ms-2" type="submit">Search</button>
                </form>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Main Content - Job Listings -->
        <div class="col-md-8">
            @if (!Model.Jobs.Any())
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    No jobs found matching your criteria. Please try different search parameters.
                </div>
            }
            else
            {
                <!-- Job Cards -->
                @foreach (var job in Model.Jobs)
                {
                    <div class="card job-card-horizontall mb-4">
                        <div class="row g-0">
                            <div class="col-md-3">
                                <img src="@job.ImageMain" class="img-fluid rounded-start h-100" alt="@job.Title" style="object-fit: cover; min-height: 160px;">
                            </div>
                            <div class="col-md-9">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <h5 class="card-title mb-0">@job.Title</h5>
                                        <div class="d-flex align-items-center">
                                            @if (job.PostType == "diamond")
                                            {
                                                <span class="badge bg-warning text-dark me-2">Premium</span>
                                            }
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                <button class="btn-wishlist @(ViewBag.WishlistJobIds != null && ViewBag.WishlistJobIds.Contains(job.Id) ? "active" : "")"
                                                        data-job-id="@job.Id"
                                                        data-is-in-wishlist="@(ViewBag.WishlistJobIds != null && ViewBag.WishlistJobIds.Contains(job.Id) ? "true" : "false")"
                                                        title="@(ViewBag.WishlistJobIds != null && ViewBag.WishlistJobIds.Contains(job.Id) ? "Remove from wishlist" : "Add to wishlist")">
                                                    <i class="@(ViewBag.WishlistJobIds != null && ViewBag.WishlistJobIds.Contains(job.Id) ? "fas" : "far") fa-heart"></i>
                                                </button>
                                            }
                                        </div>
                                    </div>
                                    <p class="card-text company-name mb-2">
                                        @(job.User.CompanyProfiles.FirstOrDefault()?.CompanyName ?? job.User.Username)
                                    </p>
                                    <p class="card-text location mb-1">
                                        <i class="fas fa-map-marker-alt me-2 text-primary"></i>@job.Location
                                    </p>
                                    <p class="card-text salary mb-3">
                                        <i class="fas fa-money-bill-wave me-2 text-primary"></i>
                                        @(job.SalaryMin.HasValue && job.SalaryMax.HasValue
                                            ? $"{job.SalaryMin:N0} - {job.SalaryMax:N0} VND/hour"
                                            : "Negotiable")
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="badge bg-primary">@job.JobType</span>
                                        <a href="@Url.Action("JobDetails", "Worker", new { id = job.Id })" class="btn btn-sm btn-outline-primary">
                                            View Details
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Page navigation" class="mt-4">
                        <ul class="pagination justify-content-center">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("SearchResults", "Worker", new {
                                        page = Model.CurrentPage - 1,
                                        keyword = Model.Keyword,
                                        location = Model.Location,
                                        jobType = Model.JobType,
                                        minSalary = Model.MinSalary,
                                        maxSalary = Model.MaxSalary,
                                        categoryId = Model.CategoryId
                                    })" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }

                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("SearchResults", "Worker", new {
                                        page = i,
                                        keyword = Model.Keyword,
                                        location = Model.Location,
                                        jobType = Model.JobType,
                                        minSalary = Model.MinSalary,
                                        maxSalary = Model.MaxSalary,
                                        categoryId = Model.CategoryId
                                    })">@i</a>
                                </li>
                            }

                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("SearchResults", "Worker", new {
                                        page = Model.CurrentPage + 1,
                                        keyword = Model.Keyword,
                                        location = Model.Location,
                                        jobType = Model.JobType,
                                        minSalary = Model.MinSalary,
                                        maxSalary = Model.MaxSalary,
                                        categoryId = Model.CategoryId
                                    })" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
        </div>

        <!-- Sidebar - Filters -->
        <div class="col-md-4">
            <!-- Filter Results Card -->
            <div class="card mb-4">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">Filter Results</h5>
                </div>
                <div class="card-body">
                    <form asp-controller="Worker" asp-action="SearchResults" method="get">
                        <!-- Keep the keyword from the current search -->
                        <input type="hidden" name="keyword" value="@Model.Keyword">

                        <div class="mb-3">
                            <label for="location" class="form-label">Location</label>
                            <input type="text" class="form-control" id="location" name="location" value="@Model.Location" placeholder="City, district, or address">
                        </div>

                        <div class="mb-3">
                            <label for="jobType" class="form-label">Job Type</label>
                            <select class="form-select" id="jobType" name="jobType">
                                <option value="">All Job Types</option>
                                <option value="full-time" selected="@(Model.JobType == "full-time")">Full-time</option>
                                <option value="part-time" selected="@(Model.JobType == "part-time")">Part-time</option>
                                <option value="contract" selected="@(Model.JobType == "contract")">Contract</option>
                                <option value="temporary" selected="@(Model.JobType == "temporary")">Temporary</option>
                                <option value="internship" selected="@(Model.JobType == "internship")">Internship</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Salary Range (per hour)</label>
                            <div class="row">
                                <div class="col-6">
                                    <input type="number" class="form-control" name="minSalary" value="@Model.MinSalary" placeholder="Min">
                                </div>
                                <div class="col-6">
                                    <input type="number" class="form-control" name="maxSalary" value="@Model.MaxSalary" placeholder="Max">
                                </div>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Apply Filters</button>
                    </form>
                </div>
            </div>

            <!-- Popular Categories Card -->
            <div class="card">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">Popular Categories</h5>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        @foreach (var category in Model.PopularCategories)
                        {
                            <a href="@Url.Action("CategoryJobs", "Worker", new { id = category.Id })" 
                               class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                @category.Name
                                <span class="badge bg-primary rounded-pill">@category.JobCount</span>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
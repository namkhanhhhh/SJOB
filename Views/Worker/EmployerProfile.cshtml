@model SJOB_EXE201.ViewModels.EmployerProfileViewModel
@{
    ViewData["Title"] = Model.CompanyProfile?.CompanyName ?? Model.Employer.Username;
    Layout = "_WorkerLayout";
}

<div class="container my-5">
    <div class="row">
        <!-- Employer Profile Section -->
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-body text-center">
                    @if (!string.IsNullOrEmpty(Model.Employer.Avatar))
                    {
                        <img src="@Model.Employer.Avatar" alt="@Model.Employer.Username" class="rounded-circle mb-3" style="width: 120px; height: 120px; object-fit: cover;">
                    }
                    else
                    {
                        <div class="rounded-circle bg-secondary text-white d-flex align-items-center justify-content-center mx-auto mb-3" style="width: 120px; height: 120px;">
                            <i class="fas fa-user fa-4x"></i>
                        </div>
                    }

                    <h3 class="card-title">
                        @(Model.CompanyProfile?.CompanyName ?? Model.Employer.Username)
                    </h3>

                    @if (Model.CompanyProfile?.VerifiedBadge == true)
                    {
                        <div class="mb-2">
                            <span class="badge bg-primary">
                                <i class="fas fa-check-circle me-1"></i> Verified Employer
                            </span>
                        </div>
                    }

                    <p class="text-muted">
                        <i class="fas fa-briefcase me-2"></i>
                        @(Model.CompanyProfile?.Industry ?? "Not specified")
                    </p>

                    <p class="text-muted">
                        <i class="fas fa-users me-2"></i>
                        @(Model.CompanyProfile?.CompanySize ?? "Not specified") employees
                    </p>

                    <p class="text-muted">
                        <i class="fas fa-calendar-alt me-2"></i>
                        Member since @Model.JoinedDate.ToString("MMMM yyyy")
                    </p>

                    <div class="d-flex justify-content-center gap-3 mt-3">
                        <div class="text-center">
                            <h4>@Model.TotalJobPosts</h4>
                            <small class="text-muted">Job Posts</small>
                        </div>
                        <div class="text-center">
                            <h4>@Model.ProfileViewCount</h4>
                            <small class="text-muted">Profile Views</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Contact Information -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Contact Information</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        @if (!string.IsNullOrEmpty(Model.Employer.UserDetails.FirstOrDefault()?.PhoneNumber))
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><i class="fas fa-phone me-2"></i>Phone</span>
                                <div class="d-flex align-items-center">
                                    <span id="phoneNumber">@Model.Employer.UserDetails.FirstOrDefault()?.PhoneNumber</span>
                                    <button class="btn btn-sm btn-outline-primary ms-2" onclick="copyToClipboard('phoneNumber')">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                </div>
                            </li>
                        }

                        @if (!string.IsNullOrEmpty(Model.Employer.Email))
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><i class="fas fa-envelope me-2"></i>Email</span>
                                <div class="d-flex align-items-center">
                                    <span id="emailAddress">@Model.Employer.Email</span>
                                    <button class="btn btn-sm btn-outline-primary ms-2" onclick="copyToClipboard('emailAddress')">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                </div>
                            </li>
                        }

                        @if (!string.IsNullOrEmpty(Model.CompanyProfile?.CompanyWebsite))
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><i class="fas fa-globe me-2"></i>Website</span>
                                <a href="@Model.CompanyProfile.CompanyWebsite" target="_blank" class="text-primary">
                                    Visit Website <i class="fas fa-external-link-alt ms-1"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <!-- Company Description -->
            @if (!string.IsNullOrEmpty(Model.CompanyProfile?.CompanyDescription))
            {
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">About the Company</h5>
                    </div>
                    <div class="card-body">
                        <p>@Html.Raw(Model.CompanyProfile.CompanyDescription.Replace("\n", "<br>"))</p>
                    </div>
                </div>
            }
        </div>

        <!-- Job Listings Section -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Job Listings (@Model.TotalJobPosts)</h5>
                </div>
                <div class="card-body">
                    @if (!Model.JobPosts.Any())
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            This employer has no active job listings at the moment.
                        </div>
                    }
                    else
                    {
                        @foreach (var job in Model.JobPosts)
                        {
                            <div class="card job-card-horizontal mb-3">
                                <div class="row g-0">
                                    <div class="col-md-3">
                                        <img src="@job.ImageMain" class="img-fluid rounded-start h-100" alt="@job.Title" style="object-fit: cover; min-height: 160px;">
                                    </div>
                                    <div class="col-md-9">
                                        <div class="card-body">
                                            <div class="d-flex justify-content-between align-items-start mb-2">
                                                <h5 class="card-title mb-0">@job.Title</h5>
                                                <div class="d-flex align-items-center">
                                                    @if (job.PostType == "diamond")
                                                    {
                                                        <span class="badge bg-warning text-dark me-2">Premium</span>
                                                    }
                                                    @if (User.Identity.IsAuthenticated)
                                                    {
                                                        <button class="btn-wishlist @(Model.WishlistJobIds.Contains(job.Id) ? "active" : "")"
                                                                data-job-id="@job.Id"
                                                                data-is-in-wishlist="@(Model.WishlistJobIds.Contains(job.Id) ? "true" : "false")"
                                                                title="@(Model.WishlistJobIds.Contains(job.Id) ? "Remove from wishlist" : "Add to wishlist")">
                                                            <i class="@(Model.WishlistJobIds.Contains(job.Id) ? "fas" : "far") fa-heart"></i>
                                                        </button>
                                                    }
                                                </div>
                                            </div>
                                            <p class="card-text location mb-1">
                                                <i class="fas fa-map-marker-alt me-2 text-primary"></i>@job.Location
                                            </p>
                                            <p class="card-text salary mb-1">
                                                <i class="fas fa-money-bill-wave me-2 text-primary"></i>
                                                @(job.SalaryMin.HasValue && job.SalaryMax.HasValue
                                                    ? $"{job.SalaryMin:N0} - {job.SalaryMax:N0} VND/hour"
                                                    : "Negotiable")
                                            </p>
                                            <p class="card-text mb-3">
                                                <i class="fas fa-calendar-alt me-2 text-primary"></i>
                                                Posted on @job.CreatedAt?.ToString("MMM dd, yyyy")
                                            </p>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <span class="badge bg-primary">@job.JobType</span>
                                                <a href="@Url.Action("JobDetails", "Worker", new { id = job.Id })" class="btn btn-sm btn-outline-primary">
                                                    View Details
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function copyToClipboard(elementId) {
            var text = document.getElementById(elementId).innerText;
            navigator.clipboard.writeText(text).then(function () {
                // Show success message
                var toast = document.createElement('div');
                toast.className = 'position-fixed bottom-0 end-0 p-3';
                toast.style.zIndex = '5';
                toast.innerHTML = `
                            <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                                <div class="toast-header bg-success text-white">
                                    <i class="fas fa-check-circle me-2"></i>
                                    <strong class="me-auto">Success</strong>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                                </div>
                                <div class="toast-body">
                                    Copied to clipboard!
                                </div>
                            </div>
                        `;
                document.body.appendChild(toast);

                // Remove toast after 3 seconds
                setTimeout(function () {
                    document.body.removeChild(toast);
                }, 3000);
            }, function (err) {
                console.error('Could not copy text: ', err);
            });
        }

        $(document).ready(function () {
            // Wishlist toggle functionality
            $('.btn-wishlist').click(function () {
                var jobId = $(this).data('job-id');
                var $button = $(this);

                $.ajax({
                    url: '@Url.Action("ToggleWishlist", "Worker")',
                    type: 'POST',
                    data: { jobId: jobId },
                    success: function (response) {
                        if (response.isInWishlist) {
                            $button.addClass('active');
                            $button.find('i').removeClass('far').addClass('fas');
                            $button.attr('data-is-in-wishlist', 'true');
                            $button.attr('title', 'Remove from wishlist');
                        } else {
                            $button.removeClass('active');
                            $button.find('i').removeClass('fas').addClass('far');
                            $button.attr('data-is-in-wishlist', 'false');
                            $button.attr('title', 'Add to wishlist');
                        }
                    },
                    error: function () {
                        console.error('Error updating wishlist');
                    }
                });
            });
        });
    </script>
}
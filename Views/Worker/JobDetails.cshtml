@model SJOB_EXE201.ViewModels.JobDetailsViewModel
@{
    ViewData["Title"] = Model.JobPost.Title;
    Layout = "_WorkerLayout";
}

<div class="container mb-5">
    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start mb-3">
                        <h1 class="card-title h3">@Model.JobPost.Title</h1>
                        <span class="badge bg-@(Model.JobPost.PostType == "diamond" ? "warning" : Model.JobPost.PostType == "gold" ? "success" : "secondary")">
                            @Model.JobPost.PostType.ToUpper()
                        </span>
                    </div>
                    <p class="company-name mb-3">
                        @(Model.JobPost.User.CompanyProfiles.FirstOrDefault()?.CompanyName ?? Model.JobPost.User.Username)
                    </p>
                    <div class="job-meta mb-4">
                        <span class="me-3"><i class="fas fa-map-marker-alt me-2"></i>@Model.JobPost.Location</span>
                        <span class="me-3">
                            <i class="fas fa-money-bill-wave me-2"></i>
                            @(Model.JobPost.SalaryMin.HasValue && Model.JobPost.SalaryMax.HasValue
                                ? $"{Model.JobPost.SalaryMin:N0} - {Model.JobPost.SalaryMax:N0} VND/hour"
                                : "Negotiable")
                        </span>
                        <span class="me-3"><i class="fas fa-briefcase me-2"></i>@Model.JobPost.JobType</span>
                        <span><i class="fas fa-eye me-2"></i>@Model.JobPost.ViewCount views</span>
                    </div>

                    <div class="job-images mb-4">
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <img src="@Model.JobPost.ImageMain" class="img-fluid rounded" alt="@Model.JobPost.Title">
                            </div>
                            @if (!string.IsNullOrEmpty(Model.JobPost.Image2))
                            {
                                <div class="col-md-4 mb-3">
                                    <img src="@Model.JobPost.Image2" class="img-fluid rounded" alt="@Model.JobPost.Title">
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.JobPost.Image3))
                            {
                                <div class="col-md-4 mb-3">
                                    <img src="@Model.JobPost.Image3" class="img-fluid rounded" alt="@Model.JobPost.Title">
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.JobPost.Image4))
                            {
                                <div class="col-md-4 mb-3">
                                    <img src="@Model.JobPost.Image4" class="img-fluid rounded" alt="@Model.JobPost.Title">
                                </div>
                            }
                        </div>
                    </div>

                    <div class="job-description mb-4">
                        <h4>Job Description</h4>
                        <div class="description-content">
                            @Html.Raw(Model.JobPost.Description.Replace("\n", "<br>"))
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.JobPost.Requirements))
                    {
                        <div class="job-requirements mb-4">
                            <h4>Requirements</h4>
                            <div class="requirements-content">
                                @Html.Raw(Model.JobPost.Requirements.Replace("\n", "<br>"))
                            </div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.JobPost.Benefits))
                    {
                        <div class="job-benefits mb-4">
                            <h4>Benefits</h4>
                            <div class="benefits-content">
                                @Html.Raw(Model.JobPost.Benefits.Replace("\n", "<br>"))
                            </div>
                        </div>
                    }

                    <div class="job-categories mb-4">
                        <h4>Categories</h4>
                        <div class="categories-list">
                            @foreach (var category in Model.JobPost.JobPostCategories.Select(pc => pc.Category))
                            {
                                <a href="@Url.Action("CategoryJobs", "Worker", new { id = category.Id })" class="badge bg-light text-dark me-2 mb-2 p-2">
                                    @category.Name
                                </a>
                            }
                        </div>
                    </div>

                    <div class="job-actions">
                        @if (Model.HasApplied)
                        {
                            <button class="btn btn-success" disabled>
                                <i class="fas fa-check-circle me-2"></i>Applied
                            </button>
                        }
                        else
                        {
                            <form asp-controller="Worker" asp-action="ApplyJob" method="post">
                                <input type="hidden" name="jobId" value="@Model.JobPost.Id" />
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-paper-plane me-2"></i>Apply Now
                                </button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-body">
                    <h4 class="card-title">Company Information</h4>
                    <div class="company-info">
                        @if (Model.JobPost.User.CompanyProfiles.Any())
                        {
                            var company = Model.JobPost.User.CompanyProfiles.First();
                            <div class="text-center mb-3">
                                @if (!string.IsNullOrEmpty(company.CompanyLogo))
                                {
                                    <img src="@company.CompanyLogo" alt="@company.CompanyName" class="img-fluid rounded-circle company-logo mb-2" style="max-width: 100px;">
                                }
                                else
                                {
                                    <div class="company-logo-placeholder mb-2">
                                        <i class="fas fa-building"></i>
                                    </div>
                                }
                                <h5>@company.CompanyName</h5>
                                @if (company.VerifiedBadge == true)
                                {
                                    <span class="badge bg-primary"><i class="fas fa-check-circle me-1"></i>Verified</span>
                                }
                            </div>
                            <p>@company.CompanyDescription</p>
                            @if (!string.IsNullOrEmpty(company.CompanyWebsite))
                            {
                                <p><i class="fas fa-globe me-2"></i><a href="@company.CompanyWebsite" target="_blank">@company.CompanyWebsite</a></p>
                            }
                            <p><i class="fas fa-users me-2"></i>Company Size: @company.CompanySize</p>
                            <p><i class="fas fa-industry me-2"></i>Industry: @company.Industry</p>
                        }
                        else
                        {
                            <p>No company information available.</p>
                        }
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-body">
                    <h4 class="card-title">Job Details</h4>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span><i class="fas fa-calendar-alt me-2"></i>Posted On</span>
                            <span>@Model.JobPost.CreatedAt?.ToString("MMM dd, yyyy")</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span><i class="fas fa-clock me-2"></i>Job Type</span>
                            <span>@Model.JobPost.JobType</span>
                        </li>
                        @if (Model.JobPost.Deadline.HasValue)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><i class="fas fa-hourglass-end me-2"></i>Deadline</span>
                                <span>@Model.JobPost.Deadline?.ToString("MMM dd, yyyy")</span>
                            </li>
                        }
                        @if (!string.IsNullOrEmpty(Model.JobPost.ExperienceLevel))
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><i class="fas fa-star me-2"></i>Experience</span>
                                <span>@Model.JobPost.ExperienceLevel</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            @if (Model.RelatedJobs.Any())
            {
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Similar Jobs</h4>
                        <div class="related-jobs">
                            @foreach (var job in Model.RelatedJobs)
                            {
                                <div class="related-job-item mb-3">
                                    <a href="@Url.Action("JobDetails", "Worker", new { id = job.Id })" class="text-decoration-none">
                                        <div class="d-flex">
                                            <div class="flex-shrink-0">
                                                <img src="@job.ImageMain" alt="@job.Title" class="img-fluid rounded" style="width: 60px; height: 60px; object-fit: cover;">
                                            </div>
                                            <div class="flex-grow-1 ms-3">
                                                <h6 class="mb-0">@job.Title</h6>
                                                <p class="small text-muted">
                                                    @(job.User.CompanyProfiles.FirstOrDefault()?.CompanyName ?? job.User.Username)
                                                </p>
                                                <p class="small text-muted">
                                                    <i class="fas fa-map-marker-alt me-1"></i>@job.Location
                                                </p>
                                            </div>
                                        </div>
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Image gallery functionality
            $('.job-images img').click(function () {
                var imgSrc = $(this).attr('src');
                $('.job-images img').first().attr('src', imgSrc);
                $('html, body').animate({
                    scrollTop: $('.job-images').offset().top - 100
                }, 500);
            });
        });
    </script>
}

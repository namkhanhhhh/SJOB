@model SJOB_EXE201.ViewModels.CategoryJobsViewModel
@{
    ViewData["Title"] = Model.Category.Name;
    Layout = "_WorkerLayout";
}

<div class="container mb-5">
    <div class="category-header mb-4">
        <h1 class="h2">Công Việc @Model.Category.Name</h1>
        <p class="lead">@Model.Category.Description</p>
    </div>

    @if (!Model.Jobs.Any())
    {
        <div class="alert alert-info">
            Không tìm thấy công việc nào trong danh mục này. Vui lòng quay lại sau.
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var job in Model.Jobs)
            {
                <div class="col-md-6 mb-4">
                    <div class="card job-card-horizontal">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src="@job.ImageMain" class="img-fluid rounded-start h-100" alt="@job.Title" style="object-fit: cover;">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <h5 class="card-title">@job.Title</h5>
                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            <button class="btn-wishlist @(ViewBag.WishlistJobIds != null && ViewBag.WishlistJobIds.Contains(job.Id) ? "active" : "")"
                                                    data-job-id="@job.Id"
                                                    data-is-in-wishlist="@(ViewBag.WishlistJobIds != null && ViewBag.WishlistJobIds.Contains(job.Id) ? "true" : "false")"
                                                    title="@(ViewBag.WishlistJobIds != null && ViewBag.WishlistJobIds.Contains(job.Id) ? "Xóa khỏi danh sách yêu thích" : "Thêm vào danh sách yêu thích")">
                                                <i class="@(ViewBag.WishlistJobIds != null && ViewBag.WishlistJobIds.Contains(job.Id) ? "fas" : "far") fa-heart"></i>
                                            </button>
                                        }
                                    </div>                                    <p class="card-text company-name">
                                        @(job.User.CompanyProfiles.FirstOrDefault()?.CompanyName ?? job.User.Username)
                                    </p>
                                    <p class="card-text location">
                                        <i class="fas fa-map-marker-alt me-2"></i>@job.Location
                                    </p>
                                    <p class="card-text salary">
                                        <i class="fas fa-money-bill-wave me-2"></i>
                                        @(job.SalaryMin.HasValue && job.SalaryMax.HasValue
                                            ? $"{job.SalaryMin:N0} - {job.SalaryMax:N0} VND/giờ"
                                            : "Thương lượng")
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center mt-3">
                                        <span class="badge bg-primary">@job.JobType</span>
                                        <a href="@Url.Action("JobDetails", "Worker", new { id = job.Id })" class="btn btn-sm btn-outline-primary">Xem Chi Tiết</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Phân trang -->
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("CategoryJobs", "Worker", new { id = Model.Category.Id, page = Model.CurrentPage - 1 })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("CategoryJobs", "Worker", new { id = Model.Category.Id, page = i })">@i</a>
                        </li>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("CategoryJobs", "Worker", new { id = Model.Category.Id, page = Model.CurrentPage + 1 })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
</div>
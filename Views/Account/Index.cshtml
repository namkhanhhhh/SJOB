@model SJOB_EXE201.Models.UserListViewModel
@{
    ViewData["Title"] = "User Management";
}

<div class="container-fluid py-4">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">User Management</h2>
        </div>
        <div class="card-body">
            @if (TempData["Message"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Message"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="row mb-3">
                <div class="col-md-6">
                    <a asp-action="CreateAccount" class="btn btn-success">
                        <i class="bi bi-person-plus-fill"></i> Create New User
                    </a>
                </div>
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text bg-light">
                            <i class="bi bi-search"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control" placeholder="Search by name, email or username" value="@Model.SearchTerm">
                    </div>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-light">
                        <tr>
                            <th width="60px">#</th>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="Username"
                                   asp-route-sortOrder="@(Model.SortBy == "Username" && Model.SortOrder == "asc" ? "desc" : "asc")"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-page="@Model.CurrentPage">
                                    Username
                                    @if (Model.SortBy == "Username")
                                    {
                                        <i class="bi @(Model.SortOrder == "asc" ? "bi-sort-alpha-down" : "bi-sort-alpha-up")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="Email"
                                   asp-route-sortOrder="@(Model.SortBy == "Email" && Model.SortOrder == "asc" ? "desc" : "asc")"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-page="@Model.CurrentPage">
                                    Email
                                    @if (Model.SortBy == "Email")
                                    {
                                        <i class="bi @(Model.SortOrder == "asc" ? "bi-sort-alpha-down" : "bi-sort-alpha-up")"></i>
                                    }
                                </a>
                            </th>
                            <th>Name</th>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="Role"
                                   asp-route-sortOrder="@(Model.SortBy == "Role" && Model.SortOrder == "asc" ? "desc" : "asc")"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-page="@Model.CurrentPage">
                                    Role
                                    @if (Model.SortBy == "Role")
                                    {
                                        <i class="bi @(Model.SortOrder == "asc" ? "bi-sort-alpha-down" : "bi-sort-alpha-up")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="Status"
                                   asp-route-sortOrder="@(Model.SortBy == "Status" && Model.SortOrder == "asc" ? "desc" : "asc")"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-page="@Model.CurrentPage">
                                    Status
                                    @if (Model.SortBy == "Status")
                                    {
                                        <i class="bi @(Model.SortOrder == "asc" ? "bi-sort-down" : "bi-sort-up")"></i>
                                    }
                                </a>
                            </th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int rowNumber = (Model.CurrentPage - 1) * 10 + 1; // Assuming 10 items per page
                        }
                        @foreach (var user in Model.Users)
                        {
                            var userDetail = user.UserDetails.FirstOrDefault();
                            var fullName = userDetail != null ? $"{userDetail.FirstName} {userDetail.LastName}" : "N/A";

                            <tr class="user-row">
                                <td class="text-center">@(rowNumber++)</td>
                                <td class="username">@user.Username</td>
                                <td class="email">@user.Email</td>
                                <td class="fullname">@fullName</td>
                                <td class="role">@user.Role.Name</td>
                                <td>
                                    @if (user.Status)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactive</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-sm btn-info">
                                            <i class="bi bi-eye"></i> Details
                                        </a>
                                        <form asp-action="ToggleStatus" asp-route-id="@user.Id" method="post" onsubmit="return confirm('Are you sure you want to @(user.Status ? "deactivate" : "activate") this user?');" class="d-inline">
                                            <button type="submit" class="btn btn-sm @(user.Status ? "btn-warning" : "btn-success")">
                                                @if (user.Status)
                                                {
                                                    <i class="bi bi-lock"></i>
                                                    <span>Block</span>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-unlock"></i>
                                                    <span>Activate</span>
                                                }
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div id="noResults" class="alert alert-info text-center" style="display: none;">
                No users found matching your criteria.
            </div>

            @if (Model.Users.Count == 0)
            {
                <div class="alert alert-info text-center">
                    No users found matching your criteria.
                </div>
            }

            <!-- Pagination -->
            <div id="paginationContainer">
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            <!-- Previous page -->
                            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-sortBy="@Model.SortBy"
                                   asp-route-sortOrder="@Model.SortOrder">
                                    Previous
                                </a>
                            </li>

                            <!-- Page numbers -->
                            @{
                                int startPage = Math.Max(1, Model.CurrentPage - 2);
                                int endPage = Math.Min(Model.TotalPages, startPage + 4);

                                if (endPage - startPage < 4 && startPage > 1)
                                {
                                    startPage = Math.Max(1, endPage - 4);
                                }
                            }

                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-page="@i"
                                       asp-route-searchTerm="@Model.SearchTerm"
                                       asp-route-sortBy="@Model.SortBy"
                                       asp-route-sortOrder="@Model.SortOrder">
                                        @i
                                    </a>
                                </li>
                            }

                            <!-- Next page -->
                            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-sortBy="@Model.SortBy"
                                   asp-route-sortOrder="@Model.SortOrder">
                                    Next
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const userRows = document.querySelectorAll('.user-row');
            const noResults = document.getElementById('noResults');
            const paginationContainer = document.getElementById('paginationContainer');

            // Real-time search functionality
            searchInput.addEventListener('input', function () {
                const searchTerm = this.value.toLowerCase().trim();
                let visibleCount = 0;

                // If search is empty, show all rows
                if (searchTerm === '') {
                    userRows.forEach(function (row, index) {
                        row.style.display = '';
                        row.cells[0].textContent = index + 1;
                        visibleCount++;
                    });

                    noResults.style.display = 'none';
                    paginationContainer.style.display = '';
                    return;
                }

                // Client-side filtering for non-empty search
                userRows.forEach(function (row, index) {
                    const username = row.querySelector('.username').textContent.toLowerCase();
                    const email = row.querySelector('.email').textContent.toLowerCase();
                    const fullname = row.querySelector('.fullname').textContent.toLowerCase();
                    const role = row.querySelector('.role').textContent.toLowerCase();

                    if (username.includes(searchTerm) ||
                        email.includes(searchTerm) ||
                        fullname.includes(searchTerm) ||
                        role.includes(searchTerm)) {
                        row.style.display = '';
                        visibleCount++;

                        // Update row number for visible rows
                        row.cells[0].textContent = visibleCount;
                    } else {
                        row.style.display = 'none';
                    }
                });

                // Show/hide no results message
                if (visibleCount === 0) {
                    noResults.style.display = 'block';
                    paginationContainer.style.display = 'none';
                } else {
                    noResults.style.display = 'none';
                    paginationContainer.style.display = '';
                }
            });

            // Server-side search with debounce
            let debounceTimer;
            searchInput.addEventListener('input', function () {
                clearTimeout(debounceTimer);
                const searchTerm = this.value.trim();

                // Only trigger server-side search after 500ms of inactivity
                debounceTimer = setTimeout(function () {
                    // Always reload when search is empty to show full list
                    if (searchTerm.length === 0 || searchTerm.length >= 2) {
                        const currentUrl = new URL(window.location.href);

                        if (searchTerm.length === 0) {
                            // Remove the searchTerm parameter completely when empty
                            currentUrl.searchParams.delete('searchTerm');
                        } else {
                            currentUrl.searchParams.set('searchTerm', searchTerm);
                        }

                        currentUrl.searchParams.set('page', '1'); // Reset to first page on new search
                        window.location.href = currentUrl.toString();
                    }
                }, 500);
            });

            // If there's a search term on page load, focus the search input
            if (searchInput.value) {
                searchInput.focus();
                // Place cursor at the end
                const val = searchInput.value;
                searchInput.value = '';
                searchInput.value = val;
            }
        });
    </script>
}
